{
    "swagger": "2.0",
    "info": {
        "description": "RESTful API that will help you manage your team. You can create a member (employee or contractor) and attach a tag to him.",
        "title": "Team Manager API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/v1",
    "paths": {
        "/members": {
            "get": {
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "summary": "List members",
                "operationId": "list-members",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Go to the page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "How many member per pages",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Member"
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "post": {
                "description": "Create a new member, employee only accepts role, contractor only accepts contract_duration",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "summary": "Create a new member",
                "operationId": "create-member",
                "parameters": [
                    {
                        "description": "Member Payload",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Member"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Member"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/validate.Errors"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/members/{member_id}": {
            "get": {
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "summary": "Show a member",
                "operationId": "show-member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "member_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Member"
                            }
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "summary": "Update a member",
                "operationId": "update-member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "member_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Member"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/validate.Errors"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "summary": "Delete a member",
                "operationId": "delete-member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Member ID",
                        "name": "member_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Member"
                            }
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Member": {
            "type": "object",
            "properties": {
                "contract_duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "employee",
                        "contractor"
                    ]
                }
            }
        },
        "validate.Errors": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}